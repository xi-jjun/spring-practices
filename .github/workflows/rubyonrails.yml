# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Run Rails Rspec"
on:
  push:
    branches: [ "*" ]
    paths:
      - .github/workflows/rubyonrails.yml
      - rails-app/**
  pull_request:
    branches: [ "master", "develop" ]
    paths:
      - '.github/workflows/rubyonrails.yml'
      - 'rails-app/**'
jobs:
  run-rspec:
    runs-on: ubuntu-latest

    services:
      # Test MySQL DB Container Setting
      mysql:
        image: mysql:8.0
        ports:
          - "3310:3306"
        env:
          MYSQL_DB: rails_app_db_test
          MYSQL_ROOT_PASSWORD: mysql
      # Test Redis Container Setting
      redis:
        image: redis:7.4.0-alpine
        options: --name redis-master
        ports:
          - "6380:6379"
    env:
      RAILS_ENV: test

    # Github actions permissions (PR comment에 테스트 결과 리포팅을 위해 필수)
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Set rails-app source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ignore cache
      # Add or replace dependency steps here
      - name: Install Ruby 3.2.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      # Add or replace database setup steps here
      - name: install gem
        run: bundle install
        working-directory: ./rails-app
      - name: Set up test database
        run: |
          bin/rails db:create
          bin/rails db:migrate
        working-directory: ./rails-app
      # Add or replace test runners here
      - name: Run rspec and make rspec_result.json file
        run: |
          mkdir -p tmp
          bundle exec rspec . --format j --out tmp/rspec_result.json
        working-directory: ./rails-app

      - name: test marketplace
        if: failure()
        uses: xi-jjun/rspec-reporter@v1.1.1
        with:
          filepath: 'rails-app/tmp/rspec_result.json'
          report-mode: 'onlyPRFiles'
        env:
          GITHUB_TOKEN: ${{ secrets.CREATE_ISSUE_GITHUB_TOKEN }}

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Install Ruby and gems
  #       uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
  #       with:
  #         bundler-cache: true
  #     # Add or replace any other lints here
  #     - name: Security audit dependencies
  #       run: bin/bundler-audit --update
  #     - name: Security audit application code
  #       run: bin/brakeman -q -w2
  #     - name: Lint Ruby files
  #       run: bin/rubocop --parallel
